{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAiCeA,MA/Bf,SAAkBC,GAAQ,IAAD,EACCC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD1C,mBAClBC,EADkB,KACXC,EADW,KAGnBC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QAYlB,OACI,sBAAMW,UAAU,YAAYC,SAXf,SAAAH,GACjBA,EAAEI,iBACFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGVC,EAAS,KAIL,SACKL,EAAME,KAAQ,qCAAE,uBAAOoB,KAAK,OAAOC,YAAY,mBAAmBpB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,kBAAkBW,SAAUd,EAAce,IAAKpB,IACtJ,wBAAQQ,UAAU,mBAAlB,uBAA4D,qCAAE,uBAAOQ,KAAK,OAAOC,YAAY,YAAYpB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAAce,IAAKpB,IACvL,wBAAQQ,UAAU,cAAlB,6B,eCSGa,MA/Bf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EACjC9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAH8C,mBAClDD,EADkD,KAC5C8B,EAD4C,KAczD,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QAQRyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UACG,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACKiB,EAAKb,MADAa,EAAKjB,IAGd,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CAAmBuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAAKH,UAAU,gBACjE,cAAC,IAAD,CAAQuB,QAAS,kBAAML,EAAQ,CAACf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAAQP,UAAU,mBANVqB,OCwBlEG,MA7Cf,WAAqB,IAAD,EACUrC,mBAAS,IADnB,mBACT2B,EADS,KACFW,EADE,KAoChB,OACI,gCACI,4DACA,cAAC,EAAD,CAAUxB,SApCF,SAAAmB,GACZ,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAGA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OA+BL,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aAdP,SAAAZ,GACjB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAIzB,OAHGA,EAAKjB,KAAOA,IACXiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IAO2CZ,WApBrC,SAAAb,GACf,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAOA,KAExDsB,EAASI,IAiBmEZ,WA5B7D,SAACc,EAAQC,GACpBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI3CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCT5DC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCHNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ea5c1f58.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\n\r\nfunction TodoForm(props) {\r\nconst [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\nconst inputRef = useRef(null);\r\n\r\nuseEffect(() => {\r\n    inputRef.current.focus()\r\n});\r\n\r\nconst handleChange = e => {\r\n    setInput(e.target.value);\r\n};\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000),\r\n        text: input\r\n    });\r\n\r\n    setInput('');\r\n};\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (<><input type=\"text\" placeholder=\"Update your item\" value={input} name=\"text\" className=\"todo-input edit\" onChange={handleChange} ref={inputRef} />\r\n            <button className=\"todo-button edit\">Update</button></>) : (<><input type=\"text\" placeholder=\"Add To-Do\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange} ref={inputRef}/>\r\n            <button className=\"todo-button\">Add To-Do</button></>)}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n           <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n               {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className=\"delete-icon\"/>\r\n                <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})} className=\"edit-icon\"/>\r\n            </div> \r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo;\r\n","import React, {useState} from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr);\r\n    };\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Today?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}